# source: https://us1.prisma.sh/nikvaldez-073802/LearnAnythingBackend/dev
# timestamp: Fri May 17 2019 11:39:51 GMT-0700 (PDT)

type AggregateCurriculum {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

type Curriculum implements Node {
  id: ID!
  title: String!
  time: String
  outline: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  likedBy(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User!]
}

"""
A connection to a list of items.
"""
type CurriculumConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [CurriculumEdge]!
  aggregate: AggregateCurriculum!
}

input CurriculumCreateInput {
  id: ID
  title: String!
  time: String
  outline: String!
  user: UserCreateOneWithoutCurriculumsInput!
  likedBy: UserCreateManyWithoutLikedCurriculaInput
}

input CurriculumCreateManyWithoutLikedByInput {
  create: [CurriculumCreateWithoutLikedByInput!]
  connect: [CurriculumWhereUniqueInput!]
}

input CurriculumCreateManyWithoutUserInput {
  create: [CurriculumCreateWithoutUserInput!]
  connect: [CurriculumWhereUniqueInput!]
}

input CurriculumCreateWithoutLikedByInput {
  id: ID
  title: String!
  time: String
  outline: String!
  user: UserCreateOneWithoutCurriculumsInput!
}

input CurriculumCreateWithoutUserInput {
  id: ID
  title: String!
  time: String
  outline: String!
  likedBy: UserCreateManyWithoutLikedCurriculaInput
}

"""
An edge in a connection.
"""
type CurriculumEdge {
  """
  The item at the end of the edge.
  """
  node: Curriculum!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CurriculumOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  time_ASC
  time_DESC
  outline_ASC
  outline_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CurriculumPreviousValues {
  id: ID!
  title: String!
  time: String
  outline: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CurriculumScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CurriculumScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [CurriculumScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CurriculumScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  time: String

  """
  All values that are not equal to given value.
  """
  time_not: String

  """
  All values that are contained in given list.
  """
  time_in: [String!]

  """
  All values that are not contained in given list.
  """
  time_not_in: [String!]

  """
  All values less than the given value.
  """
  time_lt: String

  """
  All values less than or equal the given value.
  """
  time_lte: String

  """
  All values greater than the given value.
  """
  time_gt: String

  """
  All values greater than or equal the given value.
  """
  time_gte: String

  """
  All values containing the given string.
  """
  time_contains: String

  """
  All values not containing the given string.
  """
  time_not_contains: String

  """
  All values starting with the given string.
  """
  time_starts_with: String

  """
  All values not starting with the given string.
  """
  time_not_starts_with: String

  """
  All values ending with the given string.
  """
  time_ends_with: String

  """
  All values not ending with the given string.
  """
  time_not_ends_with: String
  outline: String

  """
  All values that are not equal to given value.
  """
  outline_not: String

  """
  All values that are contained in given list.
  """
  outline_in: [String!]

  """
  All values that are not contained in given list.
  """
  outline_not_in: [String!]

  """
  All values less than the given value.
  """
  outline_lt: String

  """
  All values less than or equal the given value.
  """
  outline_lte: String

  """
  All values greater than the given value.
  """
  outline_gt: String

  """
  All values greater than or equal the given value.
  """
  outline_gte: String

  """
  All values containing the given string.
  """
  outline_contains: String

  """
  All values not containing the given string.
  """
  outline_not_contains: String

  """
  All values starting with the given string.
  """
  outline_starts_with: String

  """
  All values not starting with the given string.
  """
  outline_not_starts_with: String

  """
  All values ending with the given string.
  """
  outline_ends_with: String

  """
  All values not ending with the given string.
  """
  outline_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type CurriculumSubscriptionPayload {
  mutation: MutationType!
  node: Curriculum
  updatedFields: [String!]
  previousValues: CurriculumPreviousValues
}

input CurriculumSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CurriculumSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [CurriculumSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CurriculumSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CurriculumWhereInput
}

input CurriculumUpdateInput {
  title: String
  time: String
  outline: String
  user: UserUpdateOneRequiredWithoutCurriculumsInput
  likedBy: UserUpdateManyWithoutLikedCurriculaInput
}

input CurriculumUpdateManyDataInput {
  title: String
  time: String
  outline: String
}

input CurriculumUpdateManyMutationInput {
  title: String
  time: String
  outline: String
}

input CurriculumUpdateManyWithoutLikedByInput {
  create: [CurriculumCreateWithoutLikedByInput!]
  connect: [CurriculumWhereUniqueInput!]
  set: [CurriculumWhereUniqueInput!]
  disconnect: [CurriculumWhereUniqueInput!]
  delete: [CurriculumWhereUniqueInput!]
  update: [CurriculumUpdateWithWhereUniqueWithoutLikedByInput!]
  updateMany: [CurriculumUpdateManyWithWhereNestedInput!]
  deleteMany: [CurriculumScalarWhereInput!]
  upsert: [CurriculumUpsertWithWhereUniqueWithoutLikedByInput!]
}

input CurriculumUpdateManyWithoutUserInput {
  create: [CurriculumCreateWithoutUserInput!]
  connect: [CurriculumWhereUniqueInput!]
  set: [CurriculumWhereUniqueInput!]
  disconnect: [CurriculumWhereUniqueInput!]
  delete: [CurriculumWhereUniqueInput!]
  update: [CurriculumUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CurriculumUpdateManyWithWhereNestedInput!]
  deleteMany: [CurriculumScalarWhereInput!]
  upsert: [CurriculumUpsertWithWhereUniqueWithoutUserInput!]
}

input CurriculumUpdateManyWithWhereNestedInput {
  where: CurriculumScalarWhereInput!
  data: CurriculumUpdateManyDataInput!
}

input CurriculumUpdateWithoutLikedByDataInput {
  title: String
  time: String
  outline: String
  user: UserUpdateOneRequiredWithoutCurriculumsInput
}

input CurriculumUpdateWithoutUserDataInput {
  title: String
  time: String
  outline: String
  likedBy: UserUpdateManyWithoutLikedCurriculaInput
}

input CurriculumUpdateWithWhereUniqueWithoutLikedByInput {
  where: CurriculumWhereUniqueInput!
  data: CurriculumUpdateWithoutLikedByDataInput!
}

input CurriculumUpdateWithWhereUniqueWithoutUserInput {
  where: CurriculumWhereUniqueInput!
  data: CurriculumUpdateWithoutUserDataInput!
}

input CurriculumUpsertWithWhereUniqueWithoutLikedByInput {
  where: CurriculumWhereUniqueInput!
  update: CurriculumUpdateWithoutLikedByDataInput!
  create: CurriculumCreateWithoutLikedByInput!
}

input CurriculumUpsertWithWhereUniqueWithoutUserInput {
  where: CurriculumWhereUniqueInput!
  update: CurriculumUpdateWithoutUserDataInput!
  create: CurriculumCreateWithoutUserInput!
}

input CurriculumWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [CurriculumWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [CurriculumWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CurriculumWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  time: String

  """
  All values that are not equal to given value.
  """
  time_not: String

  """
  All values that are contained in given list.
  """
  time_in: [String!]

  """
  All values that are not contained in given list.
  """
  time_not_in: [String!]

  """
  All values less than the given value.
  """
  time_lt: String

  """
  All values less than or equal the given value.
  """
  time_lte: String

  """
  All values greater than the given value.
  """
  time_gt: String

  """
  All values greater than or equal the given value.
  """
  time_gte: String

  """
  All values containing the given string.
  """
  time_contains: String

  """
  All values not containing the given string.
  """
  time_not_contains: String

  """
  All values starting with the given string.
  """
  time_starts_with: String

  """
  All values not starting with the given string.
  """
  time_not_starts_with: String

  """
  All values ending with the given string.
  """
  time_ends_with: String

  """
  All values not ending with the given string.
  """
  time_not_ends_with: String
  outline: String

  """
  All values that are not equal to given value.
  """
  outline_not: String

  """
  All values that are contained in given list.
  """
  outline_in: [String!]

  """
  All values that are not contained in given list.
  """
  outline_not_in: [String!]

  """
  All values less than the given value.
  """
  outline_lt: String

  """
  All values less than or equal the given value.
  """
  outline_lte: String

  """
  All values greater than the given value.
  """
  outline_gt: String

  """
  All values greater than or equal the given value.
  """
  outline_gte: String

  """
  All values containing the given string.
  """
  outline_contains: String

  """
  All values not containing the given string.
  """
  outline_not_contains: String

  """
  All values starting with the given string.
  """
  outline_starts_with: String

  """
  All values not starting with the given string.
  """
  outline_not_starts_with: String

  """
  All values ending with the given string.
  """
  outline_ends_with: String

  """
  All values not ending with the given string.
  """
  outline_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  user: UserWhereInput
  likedBy_every: UserWhereInput
  likedBy_some: UserWhereInput
  likedBy_none: UserWhereInput
}

input CurriculumWhereUniqueInput {
  id: ID
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createCurriculum(data: CurriculumCreateInput!): Curriculum!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateCurriculum(
    data: CurriculumUpdateInput!
    where: CurriculumWhereUniqueInput!
  ): Curriculum
  deleteUser(where: UserWhereUniqueInput!): User
  deleteCurriculum(where: CurriculumWhereUniqueInput!): Curriculum
  upsertUser(
    where: UserWhereUniqueInput!
    create: UserCreateInput!
    update: UserUpdateInput!
  ): User!
  upsertCurriculum(
    where: CurriculumWhereUniqueInput!
    create: CurriculumCreateInput!
    update: CurriculumUpdateInput!
  ): Curriculum!
  updateManyUsers(
    data: UserUpdateManyMutationInput!
    where: UserWhereInput
  ): BatchPayload!
  updateManyCurricula(
    data: CurriculumUpdateManyMutationInput!
    where: CurriculumWhereInput
  ): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyCurricula(where: CurriculumWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

enum Permission {
  ADMIN
  USER
  PERMISSIONUPDATE
}

type Query {
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!
  curricula(
    where: CurriculumWhereInput
    orderBy: CurriculumOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Curriculum]!
  user(where: UserWhereUniqueInput!): User
  curriculum(where: CurriculumWhereUniqueInput!): Curriculum
  usersConnection(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): UserConnection!
  curriculaConnection(
    where: CurriculumWhereInput
    orderBy: CurriculumOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): CurriculumConnection!

  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!
  ): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  curriculum(
    where: CurriculumSubscriptionWhereInput
  ): CurriculumSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  createdAt: DateTime!
  updatedAt: DateTime!
  permissions: [Permission!]!
  curriculums(
    where: CurriculumWhereInput
    orderBy: CurriculumOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Curriculum!]
  likedCurricula(
    where: CurriculumWhereInput
    orderBy: CurriculumOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Curriculum!]
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  curriculums: CurriculumCreateManyWithoutUserInput
  likedCurricula: CurriculumCreateManyWithoutLikedByInput
}

input UserCreateManyWithoutLikedCurriculaInput {
  create: [UserCreateWithoutLikedCurriculaInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneWithoutCurriculumsInput {
  create: UserCreateWithoutCurriculumsInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

input UserCreateWithoutCurriculumsInput {
  id: ID
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  likedCurricula: CurriculumCreateManyWithoutLikedByInput
}

input UserCreateWithoutLikedCurriculaInput {
  id: ID
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  curriculums: CurriculumCreateManyWithoutUserInput
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  createdAt: DateTime!
  updatedAt: DateTime!
  permissions: [Permission!]!
}

input UserScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  email: String

  """
  All values that are not equal to given value.
  """
  email_not: String

  """
  All values that are contained in given list.
  """
  email_in: [String!]

  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]

  """
  All values less than the given value.
  """
  email_lt: String

  """
  All values less than or equal the given value.
  """
  email_lte: String

  """
  All values greater than the given value.
  """
  email_gt: String

  """
  All values greater than or equal the given value.
  """
  email_gte: String

  """
  All values containing the given string.
  """
  email_contains: String

  """
  All values not containing the given string.
  """
  email_not_contains: String

  """
  All values starting with the given string.
  """
  email_starts_with: String

  """
  All values not starting with the given string.
  """
  email_not_starts_with: String

  """
  All values ending with the given string.
  """
  email_ends_with: String

  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  password: String

  """
  All values that are not equal to given value.
  """
  password_not: String

  """
  All values that are contained in given list.
  """
  password_in: [String!]

  """
  All values that are not contained in given list.
  """
  password_not_in: [String!]

  """
  All values less than the given value.
  """
  password_lt: String

  """
  All values less than or equal the given value.
  """
  password_lte: String

  """
  All values greater than the given value.
  """
  password_gt: String

  """
  All values greater than or equal the given value.
  """
  password_gte: String

  """
  All values containing the given string.
  """
  password_contains: String

  """
  All values not containing the given string.
  """
  password_not_contains: String

  """
  All values starting with the given string.
  """
  password_starts_with: String

  """
  All values not starting with the given string.
  """
  password_not_starts_with: String

  """
  All values ending with the given string.
  """
  password_ends_with: String

  """
  All values not ending with the given string.
  """
  password_not_ends_with: String
  resetToken: String

  """
  All values that are not equal to given value.
  """
  resetToken_not: String

  """
  All values that are contained in given list.
  """
  resetToken_in: [String!]

  """
  All values that are not contained in given list.
  """
  resetToken_not_in: [String!]

  """
  All values less than the given value.
  """
  resetToken_lt: String

  """
  All values less than or equal the given value.
  """
  resetToken_lte: String

  """
  All values greater than the given value.
  """
  resetToken_gt: String

  """
  All values greater than or equal the given value.
  """
  resetToken_gte: String

  """
  All values containing the given string.
  """
  resetToken_contains: String

  """
  All values not containing the given string.
  """
  resetToken_not_contains: String

  """
  All values starting with the given string.
  """
  resetToken_starts_with: String

  """
  All values not starting with the given string.
  """
  resetToken_not_starts_with: String

  """
  All values ending with the given string.
  """
  resetToken_ends_with: String

  """
  All values not ending with the given string.
  """
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """
  All values that are not equal to given value.
  """
  resetTokenExpiry_not: Float

  """
  All values that are contained in given list.
  """
  resetTokenExpiry_in: [Float!]

  """
  All values that are not contained in given list.
  """
  resetTokenExpiry_not_in: [Float!]

  """
  All values less than the given value.
  """
  resetTokenExpiry_lt: Float

  """
  All values less than or equal the given value.
  """
  resetTokenExpiry_lte: Float

  """
  All values greater than the given value.
  """
  resetTokenExpiry_gt: Float

  """
  All values greater than or equal the given value.
  """
  resetTokenExpiry_gte: Float
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  curriculums: CurriculumUpdateManyWithoutUserInput
  likedCurricula: CurriculumUpdateManyWithoutLikedByInput
}

input UserUpdateManyDataInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyWithoutLikedCurriculaInput {
  create: [UserCreateWithoutLikedCurriculaInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutLikedCurriculaInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutLikedCurriculaInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateOneRequiredWithoutCurriculumsInput {
  create: UserCreateWithoutCurriculumsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutCurriculumsDataInput
  upsert: UserUpsertWithoutCurriculumsInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithoutCurriculumsDataInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  likedCurricula: CurriculumUpdateManyWithoutLikedByInput
}

input UserUpdateWithoutLikedCurriculaDataInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  curriculums: CurriculumUpdateManyWithoutUserInput
}

input UserUpdateWithWhereUniqueWithoutLikedCurriculaInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutLikedCurriculaDataInput!
}

input UserUpsertWithoutCurriculumsInput {
  update: UserUpdateWithoutCurriculumsDataInput!
  create: UserCreateWithoutCurriculumsInput!
}

input UserUpsertWithWhereUniqueWithoutLikedCurriculaInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutLikedCurriculaDataInput!
  create: UserCreateWithoutLikedCurriculaInput!
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  email: String

  """
  All values that are not equal to given value.
  """
  email_not: String

  """
  All values that are contained in given list.
  """
  email_in: [String!]

  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]

  """
  All values less than the given value.
  """
  email_lt: String

  """
  All values less than or equal the given value.
  """
  email_lte: String

  """
  All values greater than the given value.
  """
  email_gt: String

  """
  All values greater than or equal the given value.
  """
  email_gte: String

  """
  All values containing the given string.
  """
  email_contains: String

  """
  All values not containing the given string.
  """
  email_not_contains: String

  """
  All values starting with the given string.
  """
  email_starts_with: String

  """
  All values not starting with the given string.
  """
  email_not_starts_with: String

  """
  All values ending with the given string.
  """
  email_ends_with: String

  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  password: String

  """
  All values that are not equal to given value.
  """
  password_not: String

  """
  All values that are contained in given list.
  """
  password_in: [String!]

  """
  All values that are not contained in given list.
  """
  password_not_in: [String!]

  """
  All values less than the given value.
  """
  password_lt: String

  """
  All values less than or equal the given value.
  """
  password_lte: String

  """
  All values greater than the given value.
  """
  password_gt: String

  """
  All values greater than or equal the given value.
  """
  password_gte: String

  """
  All values containing the given string.
  """
  password_contains: String

  """
  All values not containing the given string.
  """
  password_not_contains: String

  """
  All values starting with the given string.
  """
  password_starts_with: String

  """
  All values not starting with the given string.
  """
  password_not_starts_with: String

  """
  All values ending with the given string.
  """
  password_ends_with: String

  """
  All values not ending with the given string.
  """
  password_not_ends_with: String
  resetToken: String

  """
  All values that are not equal to given value.
  """
  resetToken_not: String

  """
  All values that are contained in given list.
  """
  resetToken_in: [String!]

  """
  All values that are not contained in given list.
  """
  resetToken_not_in: [String!]

  """
  All values less than the given value.
  """
  resetToken_lt: String

  """
  All values less than or equal the given value.
  """
  resetToken_lte: String

  """
  All values greater than the given value.
  """
  resetToken_gt: String

  """
  All values greater than or equal the given value.
  """
  resetToken_gte: String

  """
  All values containing the given string.
  """
  resetToken_contains: String

  """
  All values not containing the given string.
  """
  resetToken_not_contains: String

  """
  All values starting with the given string.
  """
  resetToken_starts_with: String

  """
  All values not starting with the given string.
  """
  resetToken_not_starts_with: String

  """
  All values ending with the given string.
  """
  resetToken_ends_with: String

  """
  All values not ending with the given string.
  """
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """
  All values that are not equal to given value.
  """
  resetTokenExpiry_not: Float

  """
  All values that are contained in given list.
  """
  resetTokenExpiry_in: [Float!]

  """
  All values that are not contained in given list.
  """
  resetTokenExpiry_not_in: [Float!]

  """
  All values less than the given value.
  """
  resetTokenExpiry_lt: Float

  """
  All values less than or equal the given value.
  """
  resetTokenExpiry_lte: Float

  """
  All values greater than the given value.
  """
  resetTokenExpiry_gt: Float

  """
  All values greater than or equal the given value.
  """
  resetTokenExpiry_gte: Float
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  curriculums_every: CurriculumWhereInput
  curriculums_some: CurriculumWhereInput
  curriculums_none: CurriculumWhereInput
  likedCurricula_every: CurriculumWhereInput
  likedCurricula_some: CurriculumWhereInput
  likedCurricula_none: CurriculumWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
